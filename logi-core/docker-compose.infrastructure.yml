version: '3.8'

services:
  # Message Queue - RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: logi-rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - logi-network

  # Cache - Redis
  redis:
    image: redis:7-alpine
    container_name: logi-redis
    hostname: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis123", "PING"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - logi-network

  # Service Discovery - Consul
  consul:
    image: consul:1.15
    container_name: logi-consul
    hostname: consul
    ports:
      - "8500:8500"        # HTTP API
      - "8600:8600/tcp"    # DNS (TCP)
      - "8600:8600/udp"    # DNS (UDP)
    environment:
      CONSUL_BIND_INTERFACE: eth0
    command: >
      consul agent
      -server
      -bootstrap-expect=1
      -ui
      -client=0.0.0.0
      -bind=0.0.0.0
      -data-dir=/consul/data
    volumes:
      - consul_data:/consul/data
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - logi-network

  # Distributed Tracing - Jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: logi-jaeger
    hostname: jaeger
    ports:
      - "16686:16686"      # Jaeger UI
      - "14268:14268"      # Legacy HTTP collector
      - "14250:14250"      # Legacy gRPC collector
      - "4317:4317"        # OTLP gRPC
      - "4318:4318"        # OTLP HTTP
      - "9411:9411"        # Zipkin
      - "6831:6831/udp"    # UDP agent
      - "6832:6832/udp"    # UDP agent
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
      COLLECTOR_ZIPKIN_HOST_PORT: ":9411"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:16686/"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - logi-network


  # Monitoring - Prometheus (Optional)
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: logi-prometheus
    hostname: prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - logi-network

  # Monitoring - Grafana (Optional)
  grafana:
    image: grafana/grafana:10.1.0
    container_name: logi-grafana
    hostname: grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - logi-network
    depends_on:
      - prometheus

volumes:
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local
  consul_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  logi-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16